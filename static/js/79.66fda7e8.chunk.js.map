{"version":3,"file":"static/js/79.66fda7e8.chunk.js","mappings":"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","sources":["contexts/TasksContext.js","Pages/TasksPage/sections/Aside/Aside.js","Pages/TasksPage/sections/Container/Container.js","Pages/TasksPage/sections/Main/components/SectionHeader/SectionHeader.js","Pages/TasksPage/sections/Main/components/SectionTasks/SectionTasks.js","Pages/TasksPage/sections/Main/components/SectionTasks/SectionTask/SectionTask.js","Pages/TasksPage/sections/Main/components/Popup/PopupAdd/PopupAdd.js","Pages/TasksPage/sections/Main/components/Popup/PopupEdit/PopupEdit.js","Pages/TasksPage/sections/Main/Main.js","Pages/TasksPage/sections/Main/RouterMain.js","Pages/TasksPage/TasksPage.js"],"sourcesContent":["import {\r\n    createContext,\r\n    useReducer,\r\n    useContext,\r\n    useMemo,\r\n    useState,\r\n} from 'react';\r\n\r\nconst TaskContext = createContext({});\r\nexport const useTaskContext = () => useContext(TaskContext);\r\n\r\nconst priorityFlagColor = {\r\n    urgent: '#c1121f',\r\n    high: '#FFF200',\r\n    normal: '#219ebc',\r\n    low: '#8B8C89',\r\n};\r\n\r\nconst initialState = {\r\n    textSearch: '',\r\n    selectPriority: 'all',\r\n    showCreate: false,\r\n    showEdit: false,\r\n    id: '',\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'SET_TEXT_SEARCH':\r\n            return { ...state, textSearch: action.payload };\r\n\r\n        case 'SET_PRIORITY':\r\n            return { ...state, selectPriority: action.payload };\r\n        case 'SHOW_CREATE':\r\n            return { ...state, showCreate: true };\r\n        case 'CLOSE_CREATE':\r\n            return { ...state, showCreate: false };\r\n        case 'SHOW_EDIT':\r\n            return { ...state, showEdit: true, id: action.payload };\r\n        case 'CLOSE_EDIT':\r\n            return { ...state, showEdit: false, id: '' };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nconst TaskContextProvider = ({ children }) => {\r\n    const [date, setDate] = useState(new Date());\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    const contextValue = useMemo(\r\n        () => ({\r\n            ...state,\r\n            setTextSearch: (text) =>\r\n                dispatch({ type: 'SET_TEXT_SEARCH', payload: text }),\r\n            setSelectPriority: (priority) =>\r\n                dispatch({ type: 'SET_PRIORITY', payload: priority }),\r\n            handleShowCreate: () => dispatch({ type: 'SHOW_CREATE' }),\r\n            handleCloseCreate: () => dispatch({ type: 'CLOSE_CREATE' }),\r\n            handleShowEdit: (id) =>\r\n                dispatch({ type: 'SHOW_EDIT', payload: id }),\r\n            handleCloseEdit: () => dispatch({ type: 'CLOSE_EDIT' }),\r\n            priorityFlagColor,\r\n            date,\r\n            setDate,\r\n        }),\r\n        [state, date, setDate]\r\n    );\r\n\r\n    return (\r\n        <TaskContext.Provider value={contextValue}>\r\n            {children}\r\n        </TaskContext.Provider>\r\n    );\r\n};\r\n\r\nexport default TaskContextProvider;\r\n","import './Aside.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { useTaskContext } from '../../../../contexts/TasksContext';\r\n\r\nimport { BsSearch } from 'react-icons/bs';\r\n\r\nfunction Aside() {\r\n    const { setTextSearch, setSelectPriority } = useTaskContext();\r\n\r\n    const handleChange = (e) => {\r\n        setTextSearch(e.target.value);\r\n    };\r\n\r\n    const handleSelectPriority = (e) => {\r\n        setSelectPriority(e.target.value);\r\n    };\r\n    return (\r\n        <div className='section-aside col-3'>\r\n            <label className='search'>\r\n                <input\r\n                    type='text'\r\n                    placeholder='Search…'\r\n                    onChange={(e) => handleChange(e)}\r\n                />\r\n                <BsSearch />\r\n            </label>\r\n            <div className='cards-links'>\r\n                <NavLink\r\n                    to='/'\r\n                    className={({ isActive, isPending }) =>\r\n                        isPending ? 'pending' : isActive ? 'active' : ''\r\n                    }\r\n                >\r\n                    All Tasks\r\n                </NavLink>\r\n            </div>\r\n            <div className='cards-links'>\r\n                <NavLink\r\n                    to='/daily_tasks'\r\n                    className={({ isActive, isPending }) =>\r\n                        isPending ? 'pending' : isActive ? 'active' : ''\r\n                    }\r\n                >\r\n                    Daily Tasks\r\n                </NavLink>\r\n            </div>\r\n            <div className='cards-links'>\r\n                <NavLink\r\n                    to='/all_tasks_completed'\r\n                    className={({ isActive, isPending }) =>\r\n                        isPending ? 'pending' : isActive ? 'active' : ''\r\n                    }\r\n                >\r\n                    All Completed Tasks\r\n                </NavLink>\r\n            </div>\r\n            <div className='cards-links'>\r\n                <NavLink\r\n                    to='/daily_tasks_completed'\r\n                    className={({ isActive, isPending }) =>\r\n                        isPending ? 'pending' : isActive ? 'active' : ''\r\n                    }\r\n                >\r\n                    Completed Daily Tasks\r\n                </NavLink>\r\n            </div>\r\n            <div className='cards-links select-priority'>\r\n                <h6>select priority</h6>\r\n                <select name='priority' onChange={handleSelectPriority}>\r\n                    <option value='all' defaultValue>\r\n                        all\r\n                    </option>\r\n                    <option value='urgent'>urgent</option>\r\n                    <option value='high'>high</option>\r\n                    <option value='normal'>normal</option>\r\n                    <option value='low'>low</option>\r\n                </select>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Aside;\r\n","import './Container.css';\r\n\r\nconst Container = ({ children }) => {\r\n    return <div className='row'>{children}</div>;\r\n};\r\n\r\nexport default Container;\r\n","import { useEffect, useState, useCallback } from 'react';\r\nimport { useTaskContext } from '../../../../../../contexts/TasksContext';\r\n\r\nimport './SectionHeader.css';\r\n\r\nimport { IoIosAddCircleOutline } from 'react-icons/io';\r\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\r\nimport { PopupAdd } from '../index';\r\nconst SectionHeader = ({ count, titleHeader, type }) => {\r\n    const { handleShowCreate, showCreate, date, setDate } = useTaskContext();\r\n    const [days, setDays] = useState(0);\r\n\r\n    const incrementDate = useCallback(() => {\r\n        setDays((prevState) => prevState + 1);\r\n    }, []);\r\n\r\n    const decrementDate = useCallback(() => {\r\n        setDays((prevState) => prevState - 1);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        setDate(\r\n            (prevState) => new Date(Date.now() + days * 24 * 60 * 60 * 1000)\r\n        );\r\n    }, [days, setDate]);\r\n\r\n    return (\r\n        <div className='section-header'>\r\n            <h1>{titleHeader}</h1>\r\n            {type === 'daily_tasks' || type === 'completed_daily_tasks' ? (\r\n                <div className='date'>\r\n                    <button onClick={decrementDate}>\r\n                        <FaArrowLeft />\r\n                    </button>\r\n\r\n                    {date.toISOString().substring(0, 10)}\r\n                    <button onClick={incrementDate}>\r\n                        <FaArrowRight />\r\n                    </button>\r\n                </div>\r\n            ) : null}\r\n\r\n            <div className='tools'>\r\n                <div className='selections'>\r\n                    <div className='clear-select'>count tasks: {count}</div>\r\n                </div>\r\n                {type === 'all_tasks' || type === 'daily_tasks' ? (\r\n                    <div>\r\n                        <button onClick={handleShowCreate}>\r\n                            <IoIosAddCircleOutline />\r\n                        </button>\r\n                        {showCreate ? <PopupAdd /> : null}\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SectionHeader;\r\n","import './SectionTasks.css';\r\n\r\nconst SectionTasks = ({ children }) => {\r\n    return <div className='sectoin-tasks'>{children}</div>;\r\n};\r\n\r\nexport default SectionTasks;\r\n","import './SectionTask.css';\r\nimport { useAuth } from '../../../../../../../contexts/AuthContext';\r\nimport { useTaskContext } from '../../../../../../../contexts/TasksContext';\r\n\r\nimport { MdDelete } from 'react-icons/md';\r\nimport { PiFlagPennantFill } from 'react-icons/pi';\r\nimport { FaCheckSquare } from 'react-icons/fa';\r\nimport { TbArrowBackUp } from 'react-icons/tb';\r\n\r\nconst SectionTask = ({ completed, id, title, description, priority, date }) => {\r\n    const { compleatedTask, deleteTask } = useAuth();\r\n    const { priorityFlagColor, handleShowEdit } = useTaskContext();\r\n\r\n    const handleCompleated = (id, completed) => {\r\n        const confirm = window.confirm(\r\n            !completed\r\n                ? 'Did you complete this task?'\r\n                : 'Do you want to return this task to your uncomplete tasks list?'\r\n        );\r\n        confirm && compleatedTask(id, completed);\r\n    };\r\n\r\n    const handleDelete = (id) => {\r\n        const confirm = window.confirm('Did you Delete this task?');\r\n        confirm && deleteTask(id);\r\n    };\r\n\r\n    return (\r\n        <div className='sectoin-task'>\r\n            {!completed ? (\r\n                <FaCheckSquare\r\n                    className='task-completed'\r\n                    onClick={() => handleCompleated(id, completed)}\r\n                />\r\n            ) : (\r\n                <TbArrowBackUp\r\n                    className='task-completed'\r\n                    onClick={() => handleCompleated(id, completed)}\r\n                />\r\n            )}\r\n\r\n            <div className='wrapper-section-task'>\r\n                <div className='wrapper-task-content'>\r\n                    <div className='task-content'>\r\n                        <h3 className='task-title'>{title}</h3>\r\n                        <h4 className='task-description'>{description}</h4>\r\n                        <h4>{date}</h4>\r\n                    </div>\r\n                    <PiFlagPennantFill\r\n                        style={{\r\n                            color: priorityFlagColor[priority],\r\n                            width: '26px',\r\n                            height: '26px',\r\n                        }}\r\n                    />\r\n                </div>\r\n\r\n                <div className='task-option'>\r\n                    {!completed ? (\r\n                        <button\r\n                            className='btn btn-primary'\r\n                            onClick={() => handleShowEdit(id)}\r\n                        >\r\n                            Edit\r\n                        </button>\r\n                    ) : null}\r\n\r\n                    <button\r\n                        className='task-delete'\r\n                        onClick={() => handleDelete(id)}\r\n                    >\r\n                        <MdDelete />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SectionTask;\r\n","import { useReducer } from 'react';\r\n\r\nimport './PopupAdd.css';\r\nimport { Modal, Container, Row, Form, Button } from 'react-bootstrap';\r\nimport { PiFlagPennantFill } from 'react-icons/pi';\r\n\r\nimport { useAuth } from '../../../../../../../contexts/AuthContext';\r\nimport { useTaskContext } from '../../../../../../../contexts/TasksContext';\r\n\r\nconst PopupAdd = () => {\r\n    const { addTask } = useAuth();\r\n    const { showCreate, handleCloseCreate, priorityFlagColor } =\r\n        useTaskContext();\r\n\r\n    // init now date\r\n    var curr = new Date();\r\n    curr.setDate(curr.getDate());\r\n    var dateToDay = curr.toISOString().substring(0, 10);\r\n\r\n    const intiState = {\r\n        title: '',\r\n        description: '',\r\n        priority: 'urgent',\r\n        date: dateToDay,\r\n    };\r\n\r\n    const reducer = (state, action) => {\r\n        switch (action.type) {\r\n            case 'input':\r\n                return {\r\n                    ...state,\r\n                    [action.field]: action.value,\r\n                };\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(reducer, intiState);\r\n\r\n    const handleChange = (e) => {\r\n        dispatch({\r\n            type: 'input',\r\n            field: e.target.name,\r\n            value: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await addTask(state);\r\n        handleCloseCreate();\r\n    };\r\n    return (\r\n        <Modal show={showCreate} onHide={handleCloseCreate} size='lg'>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Create Task</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Container>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Row>\r\n                            <div className='col-md-8 col-12'>\r\n                                <Form.Group className='mb-3'>\r\n                                    <Form.Label htmlFor='title_of_task'>\r\n                                        Title of task\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        name='title'\r\n                                        onChange={handleChange}\r\n                                        placeholder='title'\r\n                                        required\r\n                                        autoFocus\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className='mb-4'>\r\n                                    <Form.Label htmlFor='description_of_task'>\r\n                                        Description of task\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        as='textarea'\r\n                                        name='description'\r\n                                        onChange={(e) => handleChange(e)}\r\n                                        rows={3}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className='mb-3'>\r\n                                    <Form.Label htmlFor='select_priority'>\r\n                                        Select Priority\r\n                                    </Form.Label>\r\n                                    <div className='select-priority'>\r\n                                        <Form.Select\r\n                                            size='sm'\r\n                                            onChange={handleChange}\r\n                                            name='priority'\r\n                                            required\r\n                                        >\r\n                                            <option value='urgent'>\r\n                                                urgent\r\n                                            </option>\r\n                                            <option value='high'>high</option>\r\n                                            <option value='normal'>\r\n                                                normal\r\n                                            </option>\r\n                                            <option value='low'>low</option>\r\n                                        </Form.Select>\r\n                                        <span>\r\n                                            <PiFlagPennantFill\r\n                                                style={{\r\n                                                    color: priorityFlagColor[\r\n                                                        state.priority\r\n                                                    ],\r\n                                                }}\r\n                                            />\r\n                                        </span>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n\r\n                            <div className='col-md-4 col-12'>\r\n                                <Form.Group className='select-date mb-3'>\r\n                                    <Form.Label htmlFor='select_date'>\r\n                                        Select Date:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type='date'\r\n                                        name='date'\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                        defaultValue={state.date}\r\n                                    />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </Row>\r\n                        <Modal.Footer>\r\n                            <Button\r\n                                variant='secondary'\r\n                                onClick={handleCloseCreate}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <Button variant='primary' type='submit'>\r\n                                Add\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default PopupAdd;\r\n","import './PopupEdit.css';\r\nimport { useEffect, useReducer, useState } from 'react';\r\n\r\nimport { useAuth } from '../../../../../../../contexts/AuthContext';\r\nimport { useTaskContext } from '../../../../../../../contexts/TasksContext';\r\n\r\nimport { Modal, Container, Row, Form, Button } from 'react-bootstrap';\r\nimport { PiFlagPennantFill } from 'react-icons/pi';\r\n\r\nconst PopupEdit = () => {\r\n    const [loading, setLoading] = useState(true);\r\n    const { updateTask, getDataTask } = useAuth();\r\n    const { id, showEdit, handleCloseEdit, priorityFlagColor } =\r\n        useTaskContext();\r\n\r\n    const initialState = {\r\n        title: '',\r\n        description: '',\r\n        priority: '',\r\n        date: '',\r\n    };\r\n\r\n    const reducer = (state, action) => {\r\n        switch (action.type) {\r\n            case 'update':\r\n                return {\r\n                    ...state,\r\n                    [action.field]: action.value,\r\n                };\r\n            case 'setForm':\r\n                return {\r\n                    ...state,\r\n                    ...action.payload,\r\n                };\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    useEffect(() => {\r\n        setLoading(true);\r\n        const fetchData = async () => {\r\n            try {\r\n                const res = await getDataTask(id);\r\n                dispatch({ type: 'setForm', payload: res.data() });\r\n                setLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching data:', error);\r\n                setLoading(false);\r\n            }\r\n        };\r\n        fetchData();\r\n    }, [id, getDataTask]);\r\n\r\n    const handleChange = (e) => {\r\n        dispatch({\r\n            type: 'update',\r\n            field: e.target.name,\r\n            value: e.target.value,\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        await updateTask(id, state);\r\n        handleCloseEdit(); // Close the modal after updating the task\r\n    };\r\n\r\n    if (loading) {\r\n        return null; // or a spinner/loading indicator\r\n    }\r\n\r\n    return (\r\n        <Modal show={showEdit} onHide={handleCloseEdit} size='lg'>\r\n            <Modal.Header closeButton>\r\n                <Modal.Title>Edit Task</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Container>\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <Row>\r\n                            <div className='col-md-8 col-12'>\r\n                                <Form.Group className='mb-3'>\r\n                                    <Form.Label htmlFor='title_of_task'>\r\n                                        Title of task\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type='text'\r\n                                        name='title'\r\n                                        placeholder='title'\r\n                                        required\r\n                                        autoFocus\r\n                                        value={state.title}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className='mb-4'>\r\n                                    <Form.Label htmlFor='description_of_task'>\r\n                                        Description of task\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        as='textarea'\r\n                                        name='description'\r\n                                        rows={3}\r\n                                        value={state.description}\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Form.Group>\r\n                                <Form.Group className='mb-3'>\r\n                                    <Form.Label htmlFor='select_priority'>\r\n                                        Select Priority\r\n                                    </Form.Label>\r\n                                    <div className='select-priority'>\r\n                                        <Form.Select\r\n                                            size='sm'\r\n                                            name='priority'\r\n                                            required\r\n                                            value={state.priority}\r\n                                            onChange={handleChange}\r\n                                        >\r\n                                            <option value='urgent'>\r\n                                                urgent\r\n                                            </option>\r\n                                            <option value='high'>high</option>\r\n                                            <option value='normal'>\r\n                                                normal\r\n                                            </option>\r\n                                            <option value='low'>low</option>\r\n                                        </Form.Select>\r\n                                        <span>\r\n                                            <PiFlagPennantFill\r\n                                                style={{\r\n                                                    color: priorityFlagColor[\r\n                                                        state.priority\r\n                                                    ],\r\n                                                }}\r\n                                            />\r\n                                        </span>\r\n                                    </div>\r\n                                </Form.Group>\r\n                            </div>\r\n                            <div className='col-md-4 col-12'>\r\n                                <Form.Group className='select-date mb-3'>\r\n                                    <Form.Label htmlFor='select_date'>\r\n                                        Select Date:\r\n                                    </Form.Label>\r\n                                    <Form.Control\r\n                                        type='date'\r\n                                        name='date'\r\n                                        value={state.date}\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                    />\r\n                                </Form.Group>\r\n                            </div>\r\n                        </Row>\r\n                        <Modal.Footer>\r\n                            <Button\r\n                                variant='secondary'\r\n                                onClick={handleCloseEdit}\r\n                            >\r\n                                Close\r\n                            </Button>\r\n                            <Button variant='success' type='submit'>\r\n                                Edit\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </Form>\r\n                </Container>\r\n            </Modal.Body>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default PopupEdit;\r\n","import { useEffect, useState, useMemo, useCallback } from 'react';\r\nimport { collection, getDocs, query, where } from 'firebase/firestore';\r\nimport { db } from '../../../../firebase';\r\nimport { useAuth } from '../../../../contexts/AuthContext';\r\nimport { useTaskContext } from '../../../../contexts/TasksContext';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport { SectionHeader, SectionTasks, SectionTask } from './components/index';\r\nimport { PopupEdit } from './components/index';\r\n\r\nconst Main = ({ type, title }) => {\r\n    const { currentUser } = useAuth();\r\n    const { textSearch, showEdit, date, selectPriority } = useTaskContext();\r\n    const [toDoList, setToDoList] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    const styleSpinner = useMemo(\r\n        () => ({\r\n            position: 'absolute',\r\n            top: '50%',\r\n            left: '60%',\r\n        }),\r\n        []\r\n    );\r\n\r\n    const fetchTasks = useCallback(async () => {\r\n        setError(null);\r\n\r\n        try {\r\n            const colRef = collection(db, `users/${currentUser.uid}/tasks`);\r\n            const conditions = [];\r\n\r\n            if (type === 'all_tasks' || type === 'daily_tasks') {\r\n                conditions.push(where('completed', '==', false));\r\n            } else {\r\n                conditions.push(where('completed', '==', true));\r\n            }\r\n\r\n            if (type === 'daily_tasks' || type === 'completed_daily_tasks') {\r\n                conditions.push(\r\n                    where('date', '==', date.toISOString().substring(0, 10))\r\n                );\r\n            }\r\n\r\n            if (selectPriority !== 'all') {\r\n                conditions.push(where('priority', '==', selectPriority));\r\n            }\r\n\r\n            const queryRef = query(colRef, ...conditions);\r\n            const res = await getDocs(queryRef);\r\n\r\n            const taskList = res.docs.map((doc) => ({\r\n                ...doc.data(),\r\n                id: doc.id,\r\n            }));\r\n            setToDoList(taskList);\r\n        } catch (error) {\r\n            setError('Failed to load tasks');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }, [currentUser, type, date, selectPriority]);\r\n\r\n    useEffect(() => {\r\n        fetchTasks();\r\n    }, [fetchTasks]);\r\n\r\n    const filteredToDoList = useMemo(() => {\r\n        return toDoList.filter((task) =>\r\n            task.title.toLowerCase().includes(textSearch.toLowerCase())\r\n        );\r\n    }, [toDoList, textSearch]);\r\n\r\n    if (loading) {\r\n        return (\r\n            <Spinner\r\n                style={styleSpinner}\r\n                animation='border'\r\n                variant='primary'\r\n            />\r\n        );\r\n    }\r\n\r\n    if (error) {\r\n        return <div className='error-message'>{error}</div>;\r\n    }\r\n\r\n    return (\r\n        <div className='col-9'>\r\n            <SectionHeader\r\n                count={filteredToDoList.length}\r\n                titleHeader={title}\r\n                type={type}\r\n            />\r\n            <SectionTasks>\r\n                {filteredToDoList.map((task) => (\r\n                    <SectionTask\r\n                        key={task.id}\r\n                        id={task.id}\r\n                        completed={task.completed}\r\n                        title={task.title}\r\n                        description={task.description}\r\n                        priority={task.priority}\r\n                        date={task.date}\r\n                    />\r\n                ))}\r\n            </SectionTasks>\r\n            {showEdit && <PopupEdit />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Main from './Main';\r\n\r\nconst RouterMain = () => {\r\n    const all_tasks = {\r\n        type: 'all_tasks',\r\n        title: 'All Tasks',\r\n    };\r\n    const daily_tasks = {\r\n        type: 'daily_tasks',\r\n        title: 'Daily Tasks',\r\n    };\r\n    const completed_all_tasks = {\r\n        type: 'completed_all_tasks',\r\n        title: 'All Completed Tasks',\r\n    };\r\n    const completed_daily_tasks = {\r\n        type: 'completed_daily_tasks',\r\n        title: 'Completed Daily Tasks',\r\n    };\r\n    return (\r\n        <Routes>\r\n            <Route path='/' element={<Main {...all_tasks} />} />\r\n            <Route path='/daily_tasks' element={<Main {...daily_tasks} />} />\r\n            <Route\r\n                path='/all_tasks_completed'\r\n                element={<Main {...completed_all_tasks} />}\r\n            />\r\n            <Route\r\n                path='/daily_tasks_completed'\r\n                element={<Main {...completed_daily_tasks} />}\r\n            />\r\n        </Routes>\r\n    );\r\n};\r\n\r\nexport default RouterMain;\r\n","import React from 'react';\r\n\r\nimport TaskContextProvider from '../../contexts/TasksContext';\r\n\r\nimport Aside from './sections/Aside/Aside';\r\nimport Container from './sections/Container/Container';\r\nimport RouterMain from './sections/Main/RouterMain';\r\n// import Main from './sections/Main/Main';\r\n\r\nconst TasksPage = () => {\r\n    return (\r\n        <TaskContextProvider>\r\n            <Container>\r\n                <Aside />\r\n                <RouterMain />\r\n            </Container>\r\n        </TaskContextProvider>\r\n    );\r\n};\r\n\r\nexport default TasksPage;\r\n"],"names":["TaskContext","createContext","useTaskContext","useContext","priorityFlagColor","urgent","high","normal","low","initialState","textSearch","selectPriority","showCreate","showEdit","id","reducer","state","action","type","payload","_ref","children","date","setDate","useState","Date","dispatch","useReducer","contextValue","useMemo","setTextSearch","text","setSelectPriority","priority","handleShowCreate","handleCloseCreate","handleShowEdit","handleCloseEdit","_jsx","Provider","value","_jsxs","className","placeholder","onChange","e","target","handleChange","BsSearch","NavLink","to","isActive","isPending","_ref2","_ref3","_ref4","name","defaultValue","count","titleHeader","days","setDays","incrementDate","useCallback","prevState","decrementDate","useEffect","now","onClick","FaArrowLeft","toISOString","substring","FaArrowRight","IoIosAddCircleOutline","PopupAdd","completed","title","description","compleatedTask","deleteTask","useAuth","handleCompleated","window","confirm","TbArrowBackUp","FaCheckSquare","PiFlagPennantFill","style","color","width","height","handleDelete","MdDelete","addTask","curr","getDate","intiState","field","Modal","show","onHide","size","Header","closeButton","Title","Body","Container","Form","onSubmit","async","preventDefault","Row","Group","Label","htmlFor","Control","required","autoFocus","as","rows","Select","Footer","Button","variant","PopupEdit","loading","setLoading","updateTask","getDataTask","res","data","error","console","fetchData","currentUser","toDoList","setToDoList","setError","styleSpinner","position","top","left","fetchTasks","colRef","collection","db","concat","uid","conditions","push","where","queryRef","query","taskList","getDocs","docs","map","doc","filteredToDoList","filter","task","toLowerCase","includes","Spinner","animation","SectionHeader","length","SectionTasks","SectionTask","RouterMain","Routes","Route","path","element","Main","TasksPage","TaskContextProvider","Aside"],"sourceRoot":""}